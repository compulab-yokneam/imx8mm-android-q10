From 7e8d01c7cf7c7920893b735ca2ce27c70aa654f3 Mon Sep 17 00:00:00 2001
From: Uri Mashiach <uri.mashiach@compulab.co.il>
Date: Tue, 19 Sep 2017 10:47:25 +0300
Subject: [PATCH 06/49] compulab: eeprom: layout: add read serial function

The function conver the CompuLab serial number format to tag_serialnr
structure.

Signed-off-by: Uri Mashiach <uri.mashiach@compulab.co.il>
---
 board/compulab/common/eeprom.c | 67 ++++++++++++++++++++++++++++++++----------
 common/eeprom/eeprom_field.c   | 21 +++++++++++++
 include/eeprom_field.h         |  2 ++
 3 files changed, 75 insertions(+), 15 deletions(-)

diff --git a/board/compulab/common/eeprom.c b/board/compulab/common/eeprom.c
index fdb367550d..cc91f8a195 100644
--- a/board/compulab/common/eeprom.c
+++ b/board/compulab/common/eeprom.c
@@ -1,13 +1,13 @@
-// SPDX-License-Identifier: GPL-2.0+
 /*
  * (C) Copyright 2011 CompuLab, Ltd. <www.compulab.co.il>
  *
  * Authors: Nikita Kiryanov <nikita@compulab.co.il>
  *	    Igor Grinberg <grinberg@compulab.co.il>
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
  */
 
 #include <common.h>
-#include <eeprom.h>
 #include <i2c.h>
 #include <eeprom_layout.h>
 #include <eeprom_field.h>
@@ -206,7 +206,7 @@ void eeprom_field_print_bin_ver(const struct eeprom_field *field, uchar *fbuf)
 	if ((fbuf[0] == 0xff) && (fbuf[1] == 0xff)) {
 		fbuf[0] = 0;
 		fbuf[1] = 0;
-	};
+	}
 
 	printf(PRINT_FIELD_SEGMENT, field->name);
 	int major = (fbuf[1] << 8 | fbuf[0]) / 100;
@@ -399,40 +399,47 @@ int eeprom_field_update_date(struct eeprom_field *field, uchar *fbuf,
 #define	LAYOUT_VERSION_VER1 2
 #define	LAYOUT_VERSION_VER2 3
 #define	LAYOUT_VERSION_VER3 4
+#define	LAYOUT_VERSION_VER4 5
 
 extern struct eeprom_field layout_unknown[1];
 
 #define DEFINE_FIELD_FUNC(x) eeprom_field_print_##x, eeprom_field_update_##x, \
 			     eeprom_field_read_bin
 
+#define FIELD_FUNC_RES_LAST eeprom_field_print_reserved, \
+			    eeprom_field_update_ascii,   \
+			    eeprom_field_read_bin
+
+#define FIELD_FUNC_SERIAL eeprom_field_print_bin_rev,  \
+			  eeprom_field_update_bin_rev, \
+			  eeprom_field_read_rev
+
 #ifdef CONFIG_CM_T3X
 struct eeprom_field layout_legacy[5] = {
 	{ "MAC address",          6, DEFINE_FIELD_FUNC(mac) },
 	{ "Board Revision",       2, DEFINE_FIELD_FUNC(bin) },
 	{ "Serial Number",        8, DEFINE_FIELD_FUNC(bin) },
 	{ "Board Configuration", 64, DEFINE_FIELD_FUNC(ascii) },
-	{ RESERVED_FIELDS,      176, eeprom_field_print_reserved,
-				     eeprom_field_update_ascii },
+	{ RESERVED_FIELDS,      176, FIELD_FUNC_RES_LAST }
 };
 #else
 #define layout_legacy layout_unknown
 #endif
 
-#if defined(CONFIG_CM_T3X)
+#if defined(CONFIG_CM_T3X) || defined(CONFIG_CM_T3517)
 struct eeprom_field layout_v1[12] = {
 	{ "Major Revision",      2, DEFINE_FIELD_FUNC(bin_ver) },
 	{ "Minor Revision",      2, DEFINE_FIELD_FUNC(bin_ver) },
 	{ "1st MAC Address",     6, DEFINE_FIELD_FUNC(mac) },
 	{ "2nd MAC Address",     6, DEFINE_FIELD_FUNC(mac) },
 	{ "Production Date",     4, DEFINE_FIELD_FUNC(date) },
-	{ "Serial Number",      12, DEFINE_FIELD_FUNC(bin_rev) },
+	{ "Serial Number",      12, FIELD_FUNC_SERIAL },
 	{ RESERVED_FIELDS,      96, DEFINE_FIELD_FUNC(reserved) },
 	{ "Product Name",       16, DEFINE_FIELD_FUNC(ascii) },
 	{ "Product Options #1", 16, DEFINE_FIELD_FUNC(ascii) },
 	{ "Product Options #2", 16, DEFINE_FIELD_FUNC(ascii) },
 	{ "Product Options #3", 16, DEFINE_FIELD_FUNC(ascii) },
-	{ RESERVED_FIELDS,      64, eeprom_field_print_reserved,
-				    eeprom_field_update_ascii },
+	{ RESERVED_FIELDS,      64, FIELD_FUNC_RES_LAST }
 };
 #else
 #define layout_v1 layout_unknown
@@ -444,7 +451,7 @@ struct eeprom_field layout_v2[15] = {
 	{ "1st MAC Address",           6, DEFINE_FIELD_FUNC(mac) },
 	{ "2nd MAC Address",           6, DEFINE_FIELD_FUNC(mac) },
 	{ "Production Date",           4, DEFINE_FIELD_FUNC(date) },
-	{ "Serial Number",            12, DEFINE_FIELD_FUNC(bin_rev) },
+	{ "Serial Number",            12, FIELD_FUNC_SERIAL },
 	{ "3rd MAC Address (WIFI)",    6, DEFINE_FIELD_FUNC(mac) },
 	{ "4th MAC Address (Bluetooth)", 6, DEFINE_FIELD_FUNC(mac) },
 	{ "Layout Version",            1, DEFINE_FIELD_FUNC(bin) },
@@ -453,8 +460,7 @@ struct eeprom_field layout_v2[15] = {
 	{ "Product Options #1",       16, DEFINE_FIELD_FUNC(ascii) },
 	{ "Product Options #2",       16, DEFINE_FIELD_FUNC(ascii) },
 	{ "Product Options #3",       16, DEFINE_FIELD_FUNC(ascii) },
-	{ RESERVED_FIELDS,            64, eeprom_field_print_reserved,
-					  eeprom_field_update_ascii },
+	{ RESERVED_FIELDS,            64, FIELD_FUNC_RES_LAST },
 };
 
 struct eeprom_field layout_v3[16] = {
@@ -463,7 +469,7 @@ struct eeprom_field layout_v3[16] = {
 	{ "1st MAC Address",           6, DEFINE_FIELD_FUNC(mac) },
 	{ "2nd MAC Address",           6, DEFINE_FIELD_FUNC(mac) },
 	{ "Production Date",           4, DEFINE_FIELD_FUNC(date) },
-	{ "Serial Number",            12, DEFINE_FIELD_FUNC(bin_rev) },
+	{ "Serial Number",            12, FIELD_FUNC_SERIAL },
 	{ "3rd MAC Address (WIFI)",    6, DEFINE_FIELD_FUNC(mac) },
 	{ "4th MAC Address (Bluetooth)", 6, DEFINE_FIELD_FUNC(mac) },
 	{ "Layout Version",            1, DEFINE_FIELD_FUNC(bin) },
@@ -473,8 +479,31 @@ struct eeprom_field layout_v3[16] = {
 	{ "Product Options #1",       16, DEFINE_FIELD_FUNC(ascii) },
 	{ "Product Options #2",       16, DEFINE_FIELD_FUNC(ascii) },
 	{ "Product Options #3",       16, DEFINE_FIELD_FUNC(ascii) },
-	{ RESERVED_FIELDS,            64, eeprom_field_print_reserved,
-					  eeprom_field_update_ascii },
+	{ RESERVED_FIELDS,            64, FIELD_FUNC_RES_LAST },
+};
+
+struct eeprom_field layout_v4[21] = {
+	{ "Major Revision",            2, DEFINE_FIELD_FUNC(bin_ver) },
+	{ "Minor Revision",            2, DEFINE_FIELD_FUNC(bin_ver) },
+	{ "1st MAC Address",           6, DEFINE_FIELD_FUNC(mac) },
+	{ "2nd MAC Address",           6, DEFINE_FIELD_FUNC(mac) },
+	{ "Production Date",           4, DEFINE_FIELD_FUNC(date) },
+	{ "Serial Number",            12, FIELD_FUNC_SERIAL },
+	{ "3rd MAC Address (WIFI)",    6, DEFINE_FIELD_FUNC(mac) },
+	{ "4th MAC Address (Bluetooth)", 6, DEFINE_FIELD_FUNC(mac) },
+	{ "Layout Version",            1, DEFINE_FIELD_FUNC(bin) },
+	{ "CompuLab EEPROM ID",        3, DEFINE_FIELD_FUNC(bin) },
+	{ "5th MAC Address",           6, DEFINE_FIELD_FUNC(mac) },
+	{ "6th MAC Address",           6, DEFINE_FIELD_FUNC(mac) },
+	{ RESERVED_FIELDS,             4, DEFINE_FIELD_FUNC(reserved) },
+	{ RESERVED_FIELDS,            64, DEFINE_FIELD_FUNC(reserved) },
+	{ "Product Name",             16, DEFINE_FIELD_FUNC(ascii) },
+	{ "Product Options #1",       16, DEFINE_FIELD_FUNC(ascii) },
+	{ "Product Options #2",       16, DEFINE_FIELD_FUNC(ascii) },
+	{ "Product Options #3",       16, DEFINE_FIELD_FUNC(ascii) },
+	{ "Product Options #4",       16, DEFINE_FIELD_FUNC(ascii) },
+	{ "Product Options #5",       16, DEFINE_FIELD_FUNC(ascii) },
+	{ RESERVED_FIELDS,            32, DEFINE_FIELD_FUNC(reserved) },
 };
 
 void eeprom_layout_assign(struct eeprom_layout *layout, int layout_version)
@@ -496,6 +525,10 @@ void eeprom_layout_assign(struct eeprom_layout *layout, int layout_version)
 		layout->fields = layout_v3;
 		layout->num_of_fields = ARRAY_SIZE(layout_v3);
 		break;
+	case LAYOUT_VERSION_VER4:
+		layout->fields = layout_v4;
+		layout->num_of_fields = ARRAY_SIZE(layout_v4);
+		break;
 	default:
 		__eeprom_layout_assign(layout, layout_version);
 	}
@@ -511,6 +544,8 @@ int eeprom_parse_layout_version(char *str)
 		return LAYOUT_VERSION_VER2;
 	else if (!strcmp(str, "v3"))
 		return LAYOUT_VERSION_VER3;
+	else if (!strcmp(str, "v4"))
+		return LAYOUT_VERSION_VER4;
 	else
 		return LAYOUT_VERSION_UNRECOGNIZED;
 }
@@ -525,6 +560,8 @@ int eeprom_layout_detect(unsigned char *data)
 		return LAYOUT_VERSION_VER2;
 	case 3:
 		return LAYOUT_VERSION_VER3;
+	case 4 ... 0x1f:
+		return LAYOUT_VERSION_VER4;
 	}
 
 	if (data[EEPROM_LAYOUT_VER_OFFSET] >= 0x20)
diff --git a/common/eeprom/eeprom_field.c b/common/eeprom/eeprom_field.c
index e588b0943f..814dc4eb7a 100644
--- a/common/eeprom/eeprom_field.c
+++ b/common/eeprom/eeprom_field.c
@@ -204,6 +204,27 @@ int eeprom_field_update_bin_rev(struct eeprom_field *field, uchar *fbuf,
 }
 
 /**
+ * eeprom_field_read_rev() - Read reversed binary data
+ *
+ * @field:     an initialized field
+ * @fbuf:      field buffer
+ * @buf:       read buffer
+ * @buf_size:  read buffer size
+ */
+int eeprom_field_read_rev(const struct eeprom_field *field, uchar *fbuf,
+			  uchar *buf, int buf_size)
+{
+	int i;
+
+	memset(buf, 0, buf_size);
+
+	for (i = field->size - 1; i >= 0; i--, buf++)
+		*buf = fbuf[i];
+
+	return 0;
+}
+
+/**
  * eeprom_field_print_mac_addr() - print a field which contains a mac address
  *
  * Treat the field data as simple binary data, and print it formatted as a MAC
diff --git a/include/eeprom_field.h b/include/eeprom_field.h
index 6b6cd37229..311c49401a 100644
--- a/include/eeprom_field.h
+++ b/include/eeprom_field.h
@@ -31,6 +31,8 @@ int eeprom_field_read_bin(const struct eeprom_field *field, uchar *fbuf,
 void eeprom_field_print_bin_rev(const struct eeprom_field *field, uchar *fbuf);
 int eeprom_field_update_bin_rev(struct eeprom_field *field, uchar *fbuf,
 				char *value);
+int eeprom_field_read_rev(const struct eeprom_field *field, uchar *fbuf,
+			  uchar *buf, int buf_size);
 
 void eeprom_field_print_mac(const struct eeprom_field *field, uchar *fbuf);
 int eeprom_field_update_mac(struct eeprom_field *field, uchar *fbuf,
-- 
2.11.0

